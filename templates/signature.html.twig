<div class="signature-box">
    <p class="signature-name">{{ prefilled_data[rep ~ '_rep_name'] }} ({{ prefilled_data[rep ~ '_name'] }} - {{ rep_name | trans }})</p>
    <div class="signature-pad" id="signature-pad-{{ rep }}">
        {% if signatures[rep] is defined %}
            <p>{{ signatures[rep].timestamp | date("Y-m-d H:i:s") }}</p>
            <img src="{{ signatures[rep].filename }}" alt="{{ signatures[rep].name }}"/>
        {% else %}
            <div class="signature-pad--body">
                <canvas class="signature-canvas" id="signature-canvas-{{ rep }}" width="380" style="touch-action: none; user-select: none;" height="200"></canvas>
            </div>
            <div class="signature-pad--footer">
                <div class="signature-pad--actions">
                    <div>
                        <button type="button" id="signature-pad-{{ rep }}-action-clear" class="button-clear">{{ 'Clear' | trans }}</button>
                        <button type="button" id="signature-pad-{{ rep }}-action-undo" class="button-undo">{{ 'Undo' | trans }}</button>
                        <button type="button" id="signature-pad-{{ rep }}-action-save" class="button-save">{{ 'Save' | trans }}</button>
                        <input type="file" id="signature-pad-file-{{ rep }}" name="signature-file" style="display: none">
                    </div>
                </div>
            </div>
            <script>
                var clear{{ rep }}Button = document.getElementById('signature-pad-{{ rep }}-action-clear');
                var undo{{ rep }}Button = document.getElementById('signature-pad-{{ rep }}-action-undo');
                var save{{ rep }}Button = document.getElementById('signature-pad-{{ rep }}-action-save');
                var signatureCanvas{{ rep }} = document.getElementById('signature-canvas-{{ rep }}');
                var signatureFile{{ rep }} = document.getElementById('signature-pad-file-{{ rep }}');
                var signaturePad{{ rep }} = new SignaturePad(signatureCanvas{{ rep }}, {
                    backgroundColor: 'rgba(255, 255, 255, 0)',
                    penColor: 'rgb(0, 0, 0)'
                });
                clear{{ rep }}Button.addEventListener("click", function (event) {
                    signaturePad{{ rep }}.clear();
                });

                undo{{ rep }}Button.addEventListener("click", function (event) {
                    var data = signaturePad{{ rep }}.toData();

                    if (data && data.length > 0) {
                        data.pop(); // remove the last dot or line
                        signaturePad{{ rep }}.fromData(data);
                    }
                });

                save{{ rep }}Button.onclick = function() {
                    var data = signaturePad{{ rep }}.toData();
                    if (data && data.length > 0) {
                        if (confirm('{{ 'Is this signature from' | trans }} {{ prefilled_data[rep ~ '_rep_name'] }} {{ 'correct' | trans }}?')) {
                            signatureCanvas{{ rep }}.toBlob(function (blob) {
                                saveSignature(blob, signatureFile{{ rep }}, '{{ prefilled_data[rep ~ '_rep_name'] }}', '{{ rep }}');
                            });
                        }
                    }
                };

            </script>
        {% endif %}
    </div>
</div>
